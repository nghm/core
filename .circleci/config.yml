version: 2
jobs:
    install-dependencies:
        working_directory: ~/project
        docker:
            - image: angular/ngcontainer:0.3.3
        steps:
            # Checkout the code from the branch into the working_directory
            - checkout
            - run:
                name: Set environment variables in packages
                command: |
                    VERSION=$(git tag -l | sed v.* | tac | head -n 1)
                    sed -i -e "s/\$VERSION/$VERSION/" package.json
                    cd projects/core
                    sed -i -e "s/\$VERSION/$VERSION/" package.json
                    cd ../forms
                    sed -i -e "s/\$VERSION/$VERSION/" package.json
                    cd ../material-devpage
                    sed -i -e "s/\$VERSION/$VERSION/" package.json
                    cd ../material-fields
                    sed -i -e "s/\$VERSION/$VERSION/" package.json
                    cd ../router
                    sed -i -e "s/\$VERSION/$VERSION/" package.json
                    cd ../../
            - run:
                name: Install local dependencies
                command: |
                    npm install
            - save_cache:
                key: v1-dependencies-{{ .Branch }}-{{ .Revision }}
                paths:
                    - node_modules
                    - package.json
                    - projects/core/package.json
                    - projects/forms/package.json
                    - projects/router/package.json
                    - projects/material-fields/package.json
                    - projects/material-devpage/package.json
    lint-core:
        steps:
            - checkout
            - restore_cache:
                keys:
                - v1-dependencies-{{ .Branch }}-{{ .Revision }}
            - run:
                name: Linting
                command: npm run lint:core
    lint-forms:
        steps:
            - checkout
            - restore_cache:
                keys:
                - v1-dependencies-{{ .Branch }}-{{ .Revision }}
            - run:
                name: Linting
                command: npm run lint:forms
    lint-material-fields:
        steps:
            - checkout
            - restore_cache:
                keys:
                - v1-dependencies-{{ .Branch }}-{{ .Revision }}
            - run:
                name: Linting
                command: npm run lint:material-fields
    lint-router:
        steps:
            - checkout
            - restore_cache:
                keys:
                - v1-dependencies-{{ .Branch }}-{{ .Revision }}
            - run:
                name: Linting
                command: npm run lint:router
    lint-material-devpage:
        steps:
            - checkout
            - restore_cache:
                keys:
                - v1-dependencies-{{ .Branch }}-{{ .Revision }}
            - run:
                name: Linting
                command: npm run lint:material-devpage

    # The build job
    build:
        working_directory: ~/project
        docker:
            - image: angular/ngcontainer:0.3.3
        steps:
            # Checkout the code from the branch into the working_directory
            - checkout
            # Restore local dependencies from cache
            - restore_cache:
                keys:
                - v1-dependencies-{{ .Branch }}-{{ .Revision }}
            # Lint the source code
            - run:
                name: Linting
                command: npm run lint
            # Build production
            - run:
                name: Build in production
                command: npm run build:all
            # Test the source code
            - run:
                name: Testing Core
                command: npm run test:core
            - run:
                name: Testing Forms
                command: npm run test:forms
            - run:
                name: Testing Material Devpage
                command: npm run test:material-devpage
            - run:
                name: Testing Material Fields
                command: npm run test:material-fields
            - run:
                name: Testing Router
                command: npm run test:router
            - run:
                name: Testing Nghm
                command: npm run test:nghm
    deploy-docs:
        machine:
            enabled: true
        environment:
            HEROKU_APP: "docs-nghm"
        steps:
            - checkout
            # Restore local dependencies from cache
            - restore_cache:
                keys:
                    - v1-dependencies-{{ .Branch }}-{{ .Revision }}
            - run:
                name: Display package version
                command: npm run echo:version
            - run:
                name: Pull docs repository
                command: |
                    mkdir -p docs
                    cd docs
                    git init
                    git config user.email "dan.patiu@gmail.com"
                    git config user.name "Heroku Agent"
                    git pull https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP.git master
                    cd ../

            - run:
                name: Documenting Core
                command: npm run compodoc:core
            - run:
                name: Documenting Forms
                command: npm run compodoc:forms
            - run:
                name: Documenting Material Devpage
                command: npm run compodoc:material-devpage
            - run:
                name: Documenting Material Fields
                command: npm run compodoc:material-fields
            - run:
                name: Documenting Router
                command: npm run compodoc:router

            - run:
                name: Push docs repository
                command: |
                    VERSION=$(git tag -l | sed v.* | tac | head -n 1)
                    cd docs
                    git add .
                    git commit -m "Deployment commit - $VERSION"
                    git push -f https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP.git master
                    cd ../
    publish-npm:
        working_directory: ~/project
        docker:
            - image: angular/ngcontainer:0.3.3
        steps:
            - checkout
            # Restore local dependencies from cache
            - restore_cache:
                keys:
                - v1-dependencies-{{ .Branch }}-{{ .Revision }}
            - run:
                name: Authenticate with registry
                command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/repo/.npmrc

            - run:
                name: Publish Core
                command: |
                    cd projects/core
                    npm run publish
                    cd ../../
            - run:
                name: Publish Forms
                command: |
                    cd projects/forms
                    npm run publish
                    cd ../../
            - run:
                name: Publish Material Devpage
                command: |
                    cd projects/material-devpage
                    npm run publish
                    cd ../../
            - run:
                name: Publish Material Fields
                command: |
                    cd projects/material-fields
                    npm run publish
                    cd ../../
            - run:
                name: Publish Router
                command: |
                    cd projects/router
                    npm run publish
                    cd ../../
workflows:
    version: 2
    build-deploy:
        jobs:
            - install-dependencies
            - lint-all:
                working_directory: ~/project
                docker:
                    - image: angular/ngcontainer:0.3.3
                parallelism: 5
                requires:
                    - lint-core
                    - lint-forms
                    - lint-material-fields
                    - lint-router
                    - lint-material-devpage
            - build:
                requires:
                    - install-dependencies
                    - lint-all
                filters:
                    tags:
                        only: /^v.*/
            - deploy-docs:
                requires:
                    - build
                filters:
                    tags:
                        only: /^v.*/
                    branches:
                        only:
                            - master
                            - /release\/.*/
            - publish-npm:
                requires:
                    - build
                    - deploy-docs
                filters:
                    tags:
                        only: /^v.*/
                    branches:
                        only:
                            - master
